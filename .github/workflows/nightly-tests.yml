name: Nightly Test Execution

on:
  schedule:
    # Run comprehensive tests every night at 1 AM UTC
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  comprehensive-tests:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        browser: [chrome, firefox, edge]
        environment: [staging, prod]
        
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Cache Maven dependencies
      uses: actions/cache@v3
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2
        
    - name: Install Browsers
      run: |
        # Install Chrome
        wget -q -O - https://dl.google.com/linux/linux_signing_key.pub | sudo apt-key add -
        sudo sh -c 'echo "deb [arch=amd64] http://dl.google.com/linux/chrome/deb/ stable main" >> /etc/apt/sources.list.d/google-chrome.list'
        sudo apt-get update
        sudo apt-get install -y google-chrome-stable
        
        # Install Firefox
        sudo apt-get install -y firefox
        
        # Install Edge
        curl https://packages.microsoft.com/keys/microsoft.asc | gpg --dearmor > microsoft.gpg
        sudo install -o root -g root -m 644 microsoft.gpg /etc/apt/trusted.gpg.d/
        sudo sh -c 'echo "deb [arch=amd64,arm64,armhf signed-by=/etc/apt/trusted.gpg.d/microsoft.gpg] https://packages.microsoft.com/repos/edge stable main" > /etc/apt/sources.list.d/microsoft-edge-dev.list'
        sudo apt-get update
        sudo apt-get install -y microsoft-edge-stable
        
    - name: Run Comprehensive Test Suite
      run: |
        mvn test -Dsurefire.suiteXmlFiles=src/test/resources/testng.xml \
                 -Denvironment=${{ matrix.environment }} \
                 -Dbrowser=${{ matrix.browser }} \
                 -Dheadless=true \
                 -Dparallel.tests=true \
                 -Dthread.count=3
      continue-on-error: true
      
    - name: Generate Reports
      if: always()
      run: |
        mvn allure:report
        mvn site
      continue-on-error: true
      
    - name: Upload Comprehensive Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: nightly-results-${{ matrix.browser }}-${{ matrix.environment }}
        path: |
          target/surefire-reports/
          target/reports/
          target/screenshots/
          target/allure-results/
          target/site/
        retention-days: 30
        
  performance-tests:
    runs-on: ubuntu-latest
    needs: comprehensive-tests
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 11
      uses: actions/setup-java@v4
      with:
        java-version: '11'
        distribution: 'temurin'
        
    - name: Install Chrome
      uses: browser-actions/setup-chrome@latest
      
    - name: Run Performance Tests
      run: |
        mvn test -Dtest="*Test" \
                 -Dgroups="performance" \
                 -Denvironment=staging \
                 -Dbrowser=chrome \
                 -Dheadless=true
      continue-on-error: true
      
    - name: Upload Performance Results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: performance-results
        path: |
          target/surefire-reports/
          target/reports/
        retention-days: 30
        
  notify-results:
    needs: [comprehensive-tests, performance-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Send Email Notification
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 587
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "Nightly Test Results - ${{ github.repository }}"
        body: |
          Nightly test execution completed.
          
          Comprehensive Tests: ${{ needs.comprehensive-tests.result }}
          Performance Tests: ${{ needs.performance-tests.result }}
          
          Repository: ${{ github.repository }}
          Commit: ${{ github.sha }}
          
          Check the GitHub Actions page for detailed results and artifacts.
        to: ${{ secrets.NOTIFICATION_EMAIL }}
        from: ${{ secrets.EMAIL_USERNAME }}
      continue-on-error: true
